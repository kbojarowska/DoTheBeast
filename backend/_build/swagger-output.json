{
  "openapi": "3.0.0",
  "info": {
    "title": "Do The Beast",
    "version": "1.0.0",
    "description": "API documentation for Do The Beast Application"
  },
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user.",
        "description": "Registers a new user and returns user information along with an authentication token.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  },
                  "hairID": {
                    "type": "integer"
                  },
                  "outfitTopID": {
                    "type": "integer"
                  },
                  "outfitBottomID": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User account created successfully. Returns user data and a JSON Web Token (JWT)"
          },
          "400": {
            "description": "An error occurred. Possible reasons include password mismatch, user already exists, or invalid user data."
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user.",
        "description": "Logins a registered user and returns user information along with an authentication token.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully. Returns user data and a JSON Web Token (JWT)."
          },
          "401": {
            "description": "Invalid credentials (incorrect username or password)."
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users.",
        "description": "Retrieve a list of all registered users.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a specific user by ID.",
        "description": "Retrieve user details by their unique ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "put": {
        "summary": "Update user details by ID.",
        "description": "Update the user's details based on their ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "hairID": {
                    "type": "integer"
                  },
                  "outfitTopID": {
                    "type": "integer"
                  },
                  "outfitBottomID": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details updated successfully."
          },
          "400": {
            "description": "Bad request - Invalid user data."
          },
          "404": {
            "description": "User not found."
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID.",
        "description": "Delete a user by their ID and remove them from friends' lists.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users/addFriend": {
      "post": {
        "summary": "Add a friend to a user.",
        "description": "Adds a friend to a specific user's friend list.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "friendId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Friend added successfully."
          },
          "400": {
            "description": "User is already friends with this user."
          },
          "404": {
            "description": "User or friend not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users/{userId}/friends": {
      "get": {
        "summary": "Get a specific user's friends.",
        "description": "Retrieve a list of friends for a specific user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to retrieve friends for."
          }
        ],
        "responses": {
          "200": {
            "description": "List of friends retrieved successfully."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users/friends/removeFriend": {
      "delete": {
        "summary": "Remove a friend from a user.",
        "description": "Remove a specific friend from the user's friend list.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "friendId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Friend removed successfully."
          },
          "400": {
            "description": "Friend not found in the user's list."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}